"""
ИНКАПСУЛЯЦИЯ -
это механизм сокрытия деталей класса от других объектов.

Инкапсуляция в Python нужна для обеспечения безопасности и упрощения работы с объектами.
Она помогает скрывать внутренние данные и предоставляет удобный интерфейс для работы с объектом.
Это повышает надёжность и безопасность кода, облегчает его поддержку и развитие.
"""


class Book:
    """книга"""

    def __init__(self, title, author, year):
        self.__title = title
        self.__author = author
        self.__year = year

    def set_title(self, title):
        # это сеттер - метод, позволяющий установить значение приватного атрибута
        # set_title ИЗВНЕ класса
        self.__title = title

    def get_title(self):
        # это геттер - метод, позволяющий ПОЛУЧИТЬ значение приватного атрибута
        # set_title ИЗВНЕ класса
        return self._title

    def set_author(self, author):
        self.__author = author

    def get_author(self):
        return self.__author

    def set_year(self, year):
        self.__year = year

    def get_year(self):
        return self.__year


book1 = Book('Хлопушка', 'А. Лебедев', 2023)

# подобным образом получить свойство объекта book1 не получится:
# print(book1.__title)
# чтобы сделать, напишем геттеры и сеттеры
print(book1.get_title())
book1.set_title('Погремушка')
print(book1.get_title())


"""
можно сказать что данные объекта могут быть:

публичными (public) - данные доступны всем, 
приватными (private) - данные доступны только объекту/классу которому они принадлежат.

Python 3 предоставляет 3 уровня доступа к данным:

публичный (public, нет особого синтаксиса, publicBanana);

защищенный (protected, одно нижнее подчеркивание в начале названия, _protectedBanana); 
Доступ к ним возможен только внутри этого класса и также внутри унаследованных от него классов (внутри классов-потомков)

приватный (private, два нижних подчеркивания в начала названия, __privateBanana).
Python изменяет имена таких атрибутов и методов, что делает их менее доступными снаружи класса.
Однако их всё же можно получить, используя изменённое имя.

Доступ к публичным переменным и методам можно получить из основной программы.
Попытка получить приватные данные или запустить приватный метод приведет к ошибке.
"""